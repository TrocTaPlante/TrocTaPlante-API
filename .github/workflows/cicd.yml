name: Symfony PHPUnit Tests

on:
  push:
    branches: [ feat-github-actions ]
#  pull_request:
#    branches: [ master ]

jobs:
  tests:
    name: Running functional and unit test
    runs-on: ubuntu-22.04
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_USER: dev
          MYSQL_PASSWORD: dev
          MYSQL_DATABASE: troctaplante
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: true
      matrix:
        php-versions: [ '8.2-apache' ]

    steps:
      # —— Setup Github actions 🐙 —————————————————————————————————————————————
      # https://github.com/actions/checkout (official)
      - name: Checkout
        uses: actions/checkout@v2

      # https://github.com/shivammathur/setup-php (community)
      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, iconv, json, mbstring, mysqli
        env:
          update: true

      - name: Check PHP Version
        run: php -v


        # —— Composer 🧙‍️ —————————————————————————————————————————————————————————
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install

      - run: composer require symfony/runtime

      - name: Run Migration
        run: |
          composer require --dev symfony/orm-pack
          php bin/console doctrine:database:drop --if-exists --force
          php bin/console doctrine:database:create --if-not-exists
          php bin/console doctrine:migrations:migrate || echo "No migrations found or migration failed"
        env:
          DATABASE_URL: mysql://dev:dev@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/troctaplante